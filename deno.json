{
	"lock": true,

	"name": "@albedosehen/mnemo",
  "version": "0.1.0",
  "description": "Mnemo is a an easy to use qdrant client and embedder.",
  "author": "Shon Thomas",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/albedosehen/mnemo"
  },
  "homepage": "https://github.com/albedosehen/mnemo",
  "keywords": [
    "qdrant",
    "embedder",
    "vector",
    "memory",
    "crud",
    "mcp",
		"database",
		"db"
  ],
	"exports": "./src/mod.ts",
	"compilerOptions": {
		"strict": true
	},
	"tasks": {
		"test": "deno test ./tests --allow-read --allow-write --allow-net --allow-sys -q",
		"test:unit": "deno test ./tests/unit --allow-read --allow-write --allow-net --allow-sys -q",
		"test:integration": "deno test ./tests/integration/ --allow-read --allow-write --allow-net --allow-sys -q",
		"test:e2e": "deno test ./tests/integration/ --allow-read --allow-write --allow-net --allow-sys -q",
		"coverage": "deno coverage coverage/ --html",
		"coverage:lcov": "deno coverage coverage/ --lcov --output=coverage.lcov",
		"bench": "deno bench --allow-read --allow-write --allow-net --allow-sys",
		"check": "deno check src/",
		"lint": "deno lint",
		"fmt": "deno fmt",
		"fmt:check": "deno fmt --check"
	},
	"lint": {
		"include": ["src/"],
		"exclude": [],
		"rules": {
			"tags": ["recommended"],
			"include": [
				"ban-untagged-todo",
				"no-unused-vars",
				"no-explicit-any",
				"no-irregular-whitespace",
				"default-param-last",
				"no-deprecated-deno-api",
				"no-import-assign",
				"no-sloppy-imports",
				"no-delete-var",
				"no-useless-rename",
				"no-extra-boolean-cast",
				"no-invalid-regexp",
				"no-slow-types"
			],
			"exclude": []
		}
	},

	"fmt": {
		"useTabs": false,
		"lineWidth": 120,
		"indentWidth": 2,
		"semiColons": false,
		"singleQuote": true,
		"proseWrap": "preserve",
		"include": ["src/"],
		"exclude": []
	},

	"imports": {
		"@std/assert": "jsr:@std/assert@^1.0.0",
		"@std/testing": "jsr:@std/testing@^1.0.0",
		"@std/testing/bdd": "jsr:@std/testing@^1.0.0/bdd",
		"@std/testing/mock": "jsr:@std/testing@^1.0.0/mock",
		"@std/streams": "jsr:@std/streams@^1.0.0",
		"@std/async": "jsr:@std/async@^1.0.0"
	},
	"exclude": []
}
